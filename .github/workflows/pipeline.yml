name: CodeMatic Backend Service
on: 
  push:
    branches:
      - "main"


jobs:
  Build:
    environment:
      name: pipeline
    env:
      DB_USERNAME: ${{secrets.DB_USER}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_PORT: ${{secrets.DB_PORT}}   
      BASE_URL: ${{secrets.BASE_URL}}   
    
    services:
      postgres:
        image: postgres  
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB : ${{secrets.DB_NAME}}_test
          
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5     

    # machine-deployed-on: ubuntu-latest
    runs-on: ubuntu-latest    
    steps:
      - name: pulling latest version of the git repo
        uses: actions/checkout@v3

      - name: Install Python version (3.8 (production version))
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Update Pip
        run: python -m pip install --upgrade pip
      - name: Install all dependncies
        run: pip install -r requirements.txt
      
      # setting up test and environment variable no test for now. 
      - name: Test with pytest
      
        run: |
          pip install pytest
          pytest -v -s
  



  Deploy:
    runs-on: ubuntu-latest
    needs: [Build]    
    steps:  
    - name: Now Deploying.
      run: echo "Deploying to Digital Ocean."
    - name: ssh into the Ubuntu Instance
      uses: appleboy/ssh-action@master
    - name: Testing secrets
      run: echo "${{secrets.SERVER_HOST}}"

      with:
        host:  ${{secrets.SERVER_HOST}}
        username: ${{secrets.SERVER_USERNAME}}
        password: ${{secrets.SERVER_PASSWORD}}
        script: |
          source .profile
          cd poc
          source venv/bin/activate
          cd src
          git pull -v
          pip install -r requirements.txt
          cd app/src
          alembic upgrade heads
          echo ${{secrets.SERVER_PASSWORD}} | sudo -S systemctl restart poc.service
          echo ${{secrets.SERVER_PASSWORD}} | sudo systemctl status poc.service
    - run: echo "Deployment completed."
